################################
#   TYPE
################################
type ModelProcedure {
    id: ID!
    name: String!
    configurable: String
    required: String
    repeatable: String
    repeatable_json: String
    service: Service! @belongsTo
    elementModel: ElementModel! @belongsTo
    fields: [ModelField!]! @hasMany
}


################################
#   INPUT
################################
input ModelProcedureInput {
    id: ID
    name: String!
    configurable: String
    required: String
    repeatable: String
    repeatable_json: String
    service_id: ID
    model_id: ID
}


################################
#   QUERY
################################
extend type Query {
    modelProcedures: [ModelProcedure!]!
        @all(model: "Modules\\Extranet\\Services\\ElementModelLibrary\\Entities\\ModelProcedure")

    modelProcedure(id: ID! @eq): ModelProcedure
        @find(model: "Modules\\Extranet\\Services\\ElementModelLibrary\\Entities\\ModelProcedure")
}



################################
#   MUTATOR
################################
extend type Mutation {
    createModelProcedure(input: ModelProcedureInput! @spread): ModelProcedure
        @create(model: "Modules\\Extranet\\Services\\ElementModelLibrary\\Entities\\ModelProcedure")

    updateModelProcedure(input: ModelProcedureInput! @spread): ModelProcedure
        @update(model: "Modules\\Extranet\\Services\\ElementModelLibrary\\Entities\\ModelProcedure")

    deleteModelProcedure(
        id: ID!
    ): ModelProcedure
        @delete(model: "Modules\\Extranet\\Services\\ElementModelLibrary\\Entities\\ModelProcedure")
}
